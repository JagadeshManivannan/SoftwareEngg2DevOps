POWER ENJoy

3.2 NON-FUNCTIONAL REQUIREMENTS:
3.2.1 User Interface:
	The user interface of our application is thought to be used via web as well as a mobile application. There are two sketches of the UI screen which are displayed below:
 
The first screen is the HOME page where any guest user can see. It displays the sign up and login option; options like finding available cars, reserving an available car, money saving option, charge per km with current charge, status of the battery, discounts, safe areas and special parking areas. This is the HOME page of the desktop version.

The second screen shows the features and option in a mobile application. The first picture in the below area shows the HOME page of the application before login. It shows the sign up and login option for the guest user. It also displays the availability of cars in nearby area through GPS.

The below screen displays the screen after a registered user logins. It has options like: find the available cars, reserve a car, discounts, safe area,	special parking areas, money saving option, price per km with current charge.
3.2.2 Documentation
-	We will release the following documents in order to organize our work in each phase of the development process and keep in touch with the stakeholders.

-	RASD, Requirement Analysis and Specification Document, which defines our goals and assumptions and contains an overall description of the system (using scenarios and use-cases) and the models describing requirements and specifications.

-	DD, Design Document, which contains a functional description of the system using models such as UML diagrams.

-	Installation manual, which explains how to deploy the web site.

-	User manual, which explains users how to use the main functionalities of the web site.

-	Testing report, which contains the results of the testing activity performed on a system developed by another group.

-	Project reporting, which is the result of some analysis done on the project activity.

Use Case Description:

guest signup
Actors: unregistrered user
Entry conditions: user must not be registered
Flow of events:
- the user arrives at the home page of the mobile app or desktop version
- the user clicks on signup
- the user inputs its personal datas, including one valid ID and a valid drive license
- the user must confirm the registration browsing a link sent by the system to the email address specified by the user
- the system checks the profile and the input data are validated. 
- the user must input in the app's homepage the 6 digit code sent by the system to the specified mobile number
- the system validates the account, the user gets notified by sms and notification
Exit conditions: The user's account is validated
Exceptions: If the system rejects the input data, the user can find explainations in the app's home page, where he can input the missing data. If the user don't receive the sms he can ask the app to send it again. 


user login
Actors: registered user
Entry conditions: the user must have a confirmed account
Flow of events:
- the user arrives at the home page of the mobile app or desktop version
- the user clicks on login
- the user inputs its credentials in the drop down menu
- the user clicks on login
- the user is redirected to his personal page
Exit conditions: The user is successfully redirected to his personal page
Exceptions: The credentials specified by the user were wrong. The user is notified and he can input them again


user reserves an available car
Actors: registered user
Entry conditions: the user must have an abilitated account and be logged in
Flow of events:
- the user arrives at his personal page of the mobile app or desktop version
- the user cliks "find available car" to full size the map
- the user selects a car and click reserve
- the user is notified with both sms and app notifications containing informations about the reservation and the istructions to abort it
- the user approaches the car
- the user asks the system to unlock the car
- the system checks the user's position through the GPS
- if the user's GPS position matches with the car's one, the car is unlocked
- the user can specify whether to abilitate the Money Saving Option and the destination (mandatory if Money Saving Option is enabled)
- the user ignites the engine and the system starts charging
- the system takes notes about the number of passengers
- the user drive to his destination
- if the Money Saving Option is enabled, the system suggests the user the special parking area where to park
- the user looks for an available parking slot while checking on the app's map that it's not forbidden by the service's policies
- the user parks the car
- the user stops the engine and the system stops charging
- the user leaves the car 
- if the parking area isn't forbidden the car gets locked by the system, otherwise the user will be asked to get back in the car and change parking slot
- the system checks the battery status, the distance between the parking slot and the closest power station grid, and along with the previously acquired number of passengers, it applies penalities and discount according to the terms and conditions
- the user gets notified about the final charge along with the discounts
Exit conditions: The user gets notified by the system and the car is locked
Exceptions: If the GPS positions of the car and the user don't match, the user is notified to get closer to the car. If the user parks in a low GPS coverage area, the system will notify the user in time. The same if the user parks in a non-safe area. If the user doesn't get back in the car within X minutes, the car gets locked and the user gets penalities
Contact GitHub API Training Shop Blog About
© 2016 GitHub, Inc. Terms Privacy Security Status Help

